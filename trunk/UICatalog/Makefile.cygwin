# Makefile for gcc compiler for toolchain (SDK Headers)

PROJECTNAME=UICatalog
APPFOLDER=$(PROJECTNAME).app
INSTALLFOLDER=$(PROJECTNAME).app

IPHONE_IP=10.0.2.2
toolchain=/toolchain3

CC = $(toolchain)/pre/bin/arm-apple-darwin9-gcc
CPP = $(toolchain)/pre/bin/arm-apple-darwin9-g++
LD=$(CC)
LDFLAGS = -arch arm -lobjc 
LDFLAGS += -framework CoreFoundation 
LDFLAGS += -framework Foundation 
LDFLAGS += -framework UIKit 
LDFLAGS += -framework CoreGraphics
//LDFLAGS += -framework AddressBookUI
//LDFLAGS += -framework AddressBook
//LDFLAGS += -framework QuartzCore
//LDFLAGS += -framework GraphicsServices
//LDFLAGS += -framework CoreSurface
//LDFLAGS += -framework CoreAudio
//LDFLAGS += -framework Celestial
//LDFLAGS += -framework AudioToolbox
//LDFLAGS += -framework WebCore
//LDFLAGS += -framework WebKit
//LDFLAGS += -framework SystemConfiguration
//LDFLAGS += -framework CFNetwork
//LDFLAGS += -framework MediaPlayer
//LDFLAGS += -framework OpenGLES
//LDFLAGS += -framework OpenAL
LDFLAGS += -bind_at_load
LDFLAGS += -multiply_defined suppress
LDFLAGS += -march=armv6
LDFLAGS += -mcpu=arm1176jzf-s 

CFLAGS += -DDEBUG -Wall -std=c99
CFLAGS += -Diphoneos_version_min=2.0

BUILDDIR=./build/2.0
SRCDIR1=.
SRCDIR2=Picker
SRCDIR3=TableCells
OBJS+=$(patsubst %.m,%.o,$(wildcard $(SRCDIR1)/*.m))
OBJS+=$(patsubst %.c,%.o,$(wildcard $(SRCDIR1)/*.c))
OBJS+=$(patsubst %.cpp,%.o,$(wildcard $(SRCDIR1)/*.cpp))
OBJS+=$(patsubst %.m,%.o,$(wildcard $(SRCDIR2)/*.m))
OBJS+=$(patsubst %.c,%.o,$(wildcard $(SRCDIR2)/*.c))
OBJS+=$(patsubst %.cpp,%.o,$(wildcard $(SRCDIR2)/*.cpp))
OBJS+=$(patsubst %.m,%.o,$(wildcard $(SRCDIR3)/*.m))
OBJS+=$(patsubst %.c,%.o,$(wildcard $(SRCDIR3)/*.c))
OBJS+=$(patsubst %.cpp,%.o,$(wildcard $(SRCDIR3)/*.cpp))
RESOURCES+=$(wildcard ./images/*)
RESOURCES+=$(wildcard ./*.lproj)

CFLAGS += -I"$(SRCDIR1)"
CFLAGS += -I"$(SRCDIR2)"
CFLAGS += -I"$(SRCDIR3)"

CPPFLAGS=$CFLAGS

all:	$(PROJECTNAME)

$(PROJECTNAME):	$(OBJS)
	$(LD) $(LDFLAGS) -o $@ $^

%.o:	%.m
	$(CC) -c $(CFLAGS) $< -o $@

%.o:	%.c
	$(CC) -c $(CFLAGS) $< -o $@

%.o:	%.cpp
	$(CPP) -c $(CPPFLAGS) $< -o $@

dist:	$(PROJECTNAME)
	rm -rf $(BUILDDIR)
	mkdir -p $(BUILDDIR)/$(APPFOLDER)
ifneq ($(RESOURCES),)
	cp -r $(RESOURCES) $(BUILDDIR)/$(APPFOLDER)
	rm -fr $(BUILDDIR)/$(APPFOLDER)/.svn
	rm -fr $(BUILDDIR)/$(APPFOLDER)/*/.svn
endif
	cp Info.plist $(BUILDDIR)/$(APPFOLDER)/Info.plist
	@echo "APPL????" > $(BUILDDIR)/$(APPFOLDER)/PkgInfo
	export CODESIGN_ALLOCATE=$(toolchain)/pre/bin/arm-apple-darwin9-codesign_allocate; ./ldid.exe -S $(PROJECTNAME)
	mv $(PROJECTNAME) $(BUILDDIR)/$(APPFOLDER)

install: dist
	ping -t 3 -c 1 $(IPHONE_IP)
	ssh root@$(IPHONE_IP) 'rm -fr /Applications/$(INSTALLFOLDER)'
	scp -r $(BUILDDIR)/$(APPFOLDER) root@$(IPHONE_IP):/Applications/$(INSTALLFOLDER)
	@echo "Application $(INSTALLFOLDER) installed, please respring iPhone"
	ssh root@$(IPHONE_IP) 'respring'

uninstall:
	ping -t 3 -c 1 $(IPHONE_IP)
	ssh root@$(IPHONE_IP) 'rm -fr /Applications/$(INSTALLFOLDER); respring'
	@echo "Application $(INSTALLFOLDER) uninstalled, please respring iPhone"

install_respring:
	ping -t 3 -c 1 $(IPHONE_IP)
	scp respring root@$(IPHONE_IP):/usr/bin/respring

clean:
	@rm -f $(SRCDIR1)/*.o $(SRCDIR2)/*.o $(SRCDIR3)/*.o
	@rm -rf $(BUILDDIR)
	@rm -f $(PROJECTNAME)

